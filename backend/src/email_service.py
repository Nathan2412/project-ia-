"""
Module pour l'envoi d'emails aux utilisateurs.
G√®re les emails de bienvenue, confirmation et autres notifications.
"""

import smtplib
import ssl
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
from datetime import datetime
import os

class EmailService:
    def __init__(self):
        # Configuration SMTP - vous pouvez modifier ces valeurs
        self.smtp_server = "smtp.gmail.com"  # Pour Gmail
        self.smtp_port = 587  # Port pour TLS
        
        # Variables d'environnement pour s√©curit√©
        # Vous devez configurer ces variables d'environnement
        self.sender_email = os.getenv('SENDER_EMAIL', 'votre-email@gmail.com')
        self.sender_password = os.getenv('SENDER_PASSWORD', 'votre-mot-de-passe-app')
        self.sender_name = "WhatToWatch - Recommandations"
        
        # Configuration de s√©curit√©
        self.context = ssl.create_default_context()
        
    def send_welcome_email(self, user_email, user_name):
        """
        Envoie un email de bienvenue apr√®s l'inscription.
        """
        try:
            # Cr√©er le message
            message = MIMEMultipart("alternative")
            message["Subject"] = "Bienvenue sur WhatToWatch ! üé¨"
            message["From"] = f"{self.sender_name} <{self.sender_email}>"
            message["To"] = user_email
            
            # Contenu HTML de l'email
            html_content = f"""
            <html>
              <body>
                <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
                  <h1 style="color: #007bff; text-align: center;">
                    üé¨ Bienvenue sur WhatToWatch !
                  </h1>
                  
                  <p>Bonjour <strong>{user_name}</strong>,</p>
                  
                  <p>F√©licitations ! Votre compte a √©t√© cr√©√© avec succ√®s sur WhatToWatch, 
                  votre plateforme personnalis√©e de recommandations de films et s√©ries.</p>
                  
                  <div style="background-color: #f8f9fa; padding: 20px; border-radius: 8px; margin: 20px 0;">
                    <h3 style="color: #333; margin-top: 0;">üöÄ Prochaines √©tapes :</h3>
                    <ul style="color: #555;">
                      <li>‚úÖ Connectez-vous avec votre email : <strong>{user_email}</strong></li>
                      <li>üéØ Configurez vos pr√©f√©rences de genres</li>
                      <li>üì∫ S√©lectionnez vos services de streaming</li>
                      <li>üé≠ Obtenez des recommandations personnalis√©es</li>
                    </ul>
                  </div>
                  
                  <div style="text-align: center; margin: 30px 0;">
                    <a href="http://localhost:8080" 
                       style="background-color: #007bff; color: white; padding: 12px 24px; 
                              text-decoration: none; border-radius: 4px; display: inline-block;">
                      üé¨ Commencer √† explorer
                    </a>
                  </div>
                  
                  <p style="color: #666; font-size: 14px;">
                    Cet email a √©t√© envoy√© le {datetime.now().strftime("%d/%m/%Y √† %H:%M")}.
                  </p>
                  
                  <hr style="border: none; border-top: 1px solid #eee; margin: 30px 0;">
                  
                  <p style="color: #999; font-size: 12px; text-align: center;">
                    WhatToWatch - Votre assistant personnel pour d√©couvrir films et s√©ries<br>
                    Si vous n'avez pas cr√©√© ce compte, ignorez cet email.
                  </p>
                </div>
              </body>
            </html>
            """
            
            # Contenu texte simple (fallback)
            text_content = f"""
            Bienvenue sur WhatToWatch !
            
            Bonjour {user_name},
            
            F√©licitations ! Votre compte a √©t√© cr√©√© avec succ√®s.
            
            Prochaines √©tapes :
            - Connectez-vous avec votre email : {user_email}
            - Configurez vos pr√©f√©rences de genres
            - S√©lectionnez vos services de streaming
            - Obtenez des recommandations personnalis√©es
            
            Visitez : http://localhost:8080
            
            WhatToWatch - Votre assistant personnel pour d√©couvrir films et s√©ries
            """
            
            # Attacher les contenus
            text_part = MIMEText(text_content, "plain")
            html_part = MIMEText(html_content, "html")
            
            message.attach(text_part)
            message.attach(html_part)
            
            # Envoyer l'email
            return self._send_email(message, user_email)
            
        except Exception as e:
            print(f"‚ùå Erreur lors de la cr√©ation de l'email de bienvenue: {str(e)}")
            return False
    
    def send_login_notification(self, user_email, user_name):
        """
        Envoie une notification de connexion (optionnel, pour s√©curit√©).
        """
        try:
            message = MIMEMultipart("alternative")
            message["Subject"] = "Nouvelle connexion √† votre compte WhatToWatch"
            message["From"] = f"{self.sender_name} <{self.sender_email}>"
            message["To"] = user_email
            
            html_content = f"""
            <html>
              <body>
                <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
                  <h1 style="color: #007bff;">üîê Connexion d√©tect√©e</h1>
                  
                  <p>Bonjour <strong>{user_name}</strong>,</p>
                  
                  <p>Une nouvelle connexion √† votre compte WhatToWatch a √©t√© d√©tect√©e :</p>
                  
                  <div style="background-color: #f8f9fa; padding: 15px; border-radius: 8px; margin: 20px 0;">
                    <p><strong>üìÖ Date :</strong> {datetime.now().strftime("%d/%m/%Y √† %H:%M")}</p>
                    <p><strong>üìß Email :</strong> {user_email}</p>
                  </div>
                  
                  <p>Si cette connexion n'√©tait pas de vous, veuillez changer votre mot de passe imm√©diatement.</p>
                  
                  <p style="color: #999; font-size: 12px;">
                    WhatToWatch - S√©curit√© de votre compte
                  </p>
                </div>
              </body>
            </html>
            """
            
            text_content = f"""
            Nouvelle connexion d√©tect√©e
            
            Bonjour {user_name},
            
            Une nouvelle connexion √† votre compte WhatToWatch a √©t√© d√©tect√©e le {datetime.now().strftime("%d/%m/%Y √† %H:%M")}.
            
            Si cette connexion n'√©tait pas de vous, veuillez changer votre mot de passe imm√©diatement.
            
            WhatToWatch - S√©curit√© de votre compte
            """
            
            text_part = MIMEText(text_content, "plain")
            html_part = MIMEText(html_content, "html")
            
            message.attach(text_part)
            message.attach(html_part)
            
            return self._send_email(message, user_email)
            
        except Exception as e:
            print(f"‚ùå Erreur lors de la cr√©ation de l'email de connexion: {str(e)}")
            return False
    
    def _send_email(self, message, recipient_email):
        """
        M√©thode priv√©e pour envoyer un email.
        """
        try:
            # V√©rifier la configuration
            if not self.sender_email or self.sender_email == 'votre-email@gmail.com':
                print("‚ö†Ô∏è  Configuration email non configur√©e. Email non envoy√©.")
                print("üí° Configurez SENDER_EMAIL et SENDER_PASSWORD dans vos variables d'environnement")
                return False
            
            # Connexion au serveur SMTP
            with smtplib.SMTP(self.smtp_server, self.smtp_port) as server:
                server.starttls(context=self.context)
                server.login(self.sender_email, self.sender_password)
                
                # Envoyer l'email
                text = message.as_string()
                server.sendmail(self.sender_email, recipient_email, text)
                
            print(f"‚úÖ Email envoy√© avec succ√®s √† {recipient_email}")
            return True
            
        except smtplib.SMTPAuthenticationError:
            print("‚ùå Erreur d'authentification SMTP. V√©rifiez vos identifiants.")
            return False
        except smtplib.SMTPException as e:
            print(f"‚ùå Erreur SMTP: {str(e)}")
            return False
        except Exception as e:
            print(f"‚ùå Erreur lors de l'envoi de l'email: {str(e)}")
            return False
    
    def test_email_configuration(self):
        """
        Teste la configuration email.
        """
        print("üß™ Test de la configuration email...")
        print(f"üìß Serveur SMTP: {self.smtp_server}:{self.smtp_port}")
        print(f"üìß Email exp√©diteur: {self.sender_email}")
        
        if self.sender_email == 'votre-email@gmail.com':
            print("‚ùå Configuration email non configur√©e")
            print("üí° Instructions de configuration:")
            print("   1. Cr√©ez un mot de passe d'application Gmail")
            print("   2. D√©finissez les variables d'environnement:")
            print("      - SENDER_EMAIL=votre-email@gmail.com")
            print("      - SENDER_PASSWORD=votre-mot-de-passe-app")
            return False
        else:
            print("‚úÖ Configuration email d√©tect√©e")
            return True

# Instance globale du service email
email_service = EmailService()
