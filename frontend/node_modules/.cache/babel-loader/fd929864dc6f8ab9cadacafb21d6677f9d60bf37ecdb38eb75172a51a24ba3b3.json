{"ast":null,"code":"export default {\n  name: 'MovieCard',\n  props: {\n    item: {\n      type: Object,\n      required: true\n    },\n    type: {\n      type: String,\n      default: 'movie'\n    },\n    streamingServices: {\n      type: Array,\n      default: () => []\n    },\n    inHistory: {\n      type: Boolean,\n      default: false\n    }\n  },\n  methods: {\n    truncateOverview(text) {\n      if (!text) return '';\n      return text.length > 100 ? text.substring(0, 100) + '...' : text;\n    },\n    addToHistory() {\n      this.$emit('add-to-history', {\n        id: this.item.id,\n        title: this.item.title,\n        poster_path: this.item.poster_path,\n        content_type: this.type,\n        rating: this.item.rating\n      });\n    },\n    showDetails() {\n      this.$emit('show-details', this.item);\n    }\n  }\n};","map":{"version":3,"names":["name","props","item","type","Object","required","String","default","streamingServices","Array","inHistory","Boolean","methods","truncateOverview","text","length","substring","addToHistory","$emit","id","title","poster_path","content_type","rating","showDetails"],"sources":["/home/ubuntu/frontend/src/components/MovieCard.vue"],"sourcesContent":["<template>\n  <div class=\"card movie-card h-100\">\n    <!-- Poster image -->\n    <div v-if=\"item.poster_path\" class=\"poster-container\">\n      <img :src=\"`https://image.tmdb.org/t/p/w500${item.poster_path}`\" :alt=\"item.title\" class=\"movie-poster card-img-top\">\n    </div>\n    <div v-else class=\"movie-poster-placeholder card-img-top d-flex justify-content-center align-items-center bg-light\">\n      <span class=\"text-muted\">Pas d'image disponible</span>\n    </div>\n    \n    <div class=\"card-body d-flex flex-column\">\n      <h5 class=\"movie-title\">{{ item.title }}</h5>\n      \n      <div class=\"movie-info\">\n        <span>{{ item.year }}</span>\n        <span>\n          {{ type === 'movie' ? 'Film' : 'Série' }} • \n          <span class=\"star-rating\">\n            <i class=\"fas fa-star\"></i> {{ item.rating.toFixed(1) }}\n          </span>\n        </span>\n      </div>\n      \n      <p class=\"movie-genres mb-2\">\n        <small>\n          <span v-for=\"(genre, idx) in item.genre\" :key=\"genre\">\n            {{ genre }}{{ idx < item.genre.length - 1 ? ', ' : '' }}\n          </span>\n        </small>\n      </p>\n      \n      <div v-if=\"streamingServices && streamingServices.length > 0\" class=\"mb-2\">\n        <span v-for=\"service in streamingServices\" :key=\"service\" class=\"service-badge\">\n          {{ service.charAt(0).toUpperCase() + service.slice(1) }}\n        </span>\n      </div>\n      \n      <p class=\"movie-overview flex-grow-1\">{{ truncateOverview(item.overview) }}</p>\n      \n      <div class=\"mt-auto d-flex justify-content-between\">\n        <button v-if=\"!inHistory\" @click=\"addToHistory\" class=\"btn btn-sm btn-outline-primary\">\n          Ajouter à mon historique\n        </button>\n        <span v-else class=\"text-success\">\n          <i class=\"fas fa-check\"></i> Dans votre historique\n        </span>\n        \n        <a href=\"#\" @click.prevent=\"showDetails\" class=\"btn btn-sm btn-link\">\n          Plus de détails\n        </a>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'MovieCard',\n  props: {\n    item: {\n      type: Object,\n      required: true\n    },\n    type: {\n      type: String,\n      default: 'movie'\n    },\n    streamingServices: {\n      type: Array,\n      default: () => []\n    },\n    inHistory: {\n      type: Boolean,\n      default: false\n    }\n  },\n  methods: {\n    truncateOverview(text) {\n      if (!text) return '';\n      return text.length > 100 ? text.substring(0, 100) + '...' : text;\n    },\n    addToHistory() {\n      this.$emit('add-to-history', {\n        id: this.item.id,\n        title: this.item.title,\n        poster_path: this.item.poster_path,\n        content_type: this.type,\n        rating: this.item.rating\n      });\n    },\n    showDetails() {\n      this.$emit('show-details', this.item);\n    }\n  }\n}\n</script>\n\n<style scoped>\n.movie-poster {\n  height: 300px;\n  object-fit: cover;\n}\n\n.movie-poster-placeholder {\n  height: 300px;\n  background-color: #f8f9fa;\n}\n\n.movie-title {\n  font-weight: 600;\n  margin-bottom: 8px;\n}\n\n.movie-genres {\n  font-size: 0.85rem;\n  color: #6c757d;\n}\n\n.movie-overview {\n  font-size: 0.9rem;\n  line-height: 1.4;\n}\n\n.service-badge {\n  display: inline-block;\n  background-color: #e9ecef;\n  color: #495057;\n  font-size: 0.8rem;\n  padding: 2px 8px;\n  border-radius: 16px;\n  margin-right: 5px;\n  margin-bottom: 5px;\n}\n\n.star-rating {\n  color: #ffc107;\n}\n</style>\n"],"mappings":"AAwDA,eAAe;EACbA,IAAI,EAAE,WAAW;EACjBC,KAAK,EAAE;IACLC,IAAI,EAAE;MACJC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ,CAAC;IACDF,IAAI,EAAE;MACJA,IAAI,EAAEG,MAAM;MACZC,OAAO,EAAE;IACX,CAAC;IACDC,iBAAiB,EAAE;MACjBL,IAAI,EAAEM,KAAK;MACXF,OAAO,EAAEA,CAAA,KAAM;IACjB,CAAC;IACDG,SAAS,EAAE;MACTP,IAAI,EAAEQ,OAAO;MACbJ,OAAO,EAAE;IACX;EACF,CAAC;EACDK,OAAO,EAAE;IACPC,gBAAgBA,CAACC,IAAI,EAAE;MACrB,IAAI,CAACA,IAAI,EAAE,OAAO,EAAE;MACpB,OAAOA,IAAI,CAACC,MAAK,GAAI,GAAE,GAAID,IAAI,CAACE,SAAS,CAAC,CAAC,EAAE,GAAG,IAAI,KAAI,GAAIF,IAAI;IAClE,CAAC;IACDG,YAAYA,CAAA,EAAG;MACb,IAAI,CAACC,KAAK,CAAC,gBAAgB,EAAE;QAC3BC,EAAE,EAAE,IAAI,CAACjB,IAAI,CAACiB,EAAE;QAChBC,KAAK,EAAE,IAAI,CAAClB,IAAI,CAACkB,KAAK;QACtBC,WAAW,EAAE,IAAI,CAACnB,IAAI,CAACmB,WAAW;QAClCC,YAAY,EAAE,IAAI,CAACnB,IAAI;QACvBoB,MAAM,EAAE,IAAI,CAACrB,IAAI,CAACqB;MACpB,CAAC,CAAC;IACJ,CAAC;IACDC,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACN,KAAK,CAAC,cAAc,EAAE,IAAI,CAAChB,IAAI,CAAC;IACvC;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}