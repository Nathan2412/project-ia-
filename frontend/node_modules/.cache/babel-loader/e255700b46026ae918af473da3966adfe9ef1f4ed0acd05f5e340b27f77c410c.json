{"ast":null,"code":"export default {\n  name: 'UserProfile',\n  data() {\n    return {\n      isEditing: false,\n      userPrefs: {\n        genres_likes: [],\n        genres_dislikes: [],\n        directors_likes: [],\n        keywords_likes: [],\n        rating_min: 7.0,\n        streaming_services: []\n      },\n      keywordsInput: '',\n      directorsInput: ''\n    };\n  },\n  created() {\n    this.fetchGenres();\n    this.fetchStreamingServices();\n  },\n  methods: {\n    fetchGenres() {\n      if (!this.$store.state.genres.length) {\n        this.$store.dispatch('fetchGenres');\n      }\n    },\n    fetchStreamingServices() {\n      if (!this.$store.state.streamingServices.length) {\n        this.$store.dispatch('fetchStreamingServices');\n      }\n    },\n    startEditing() {\n      // Clone current preferences\n      this.userPrefs = {\n        genres_likes: [...(this.$store.state.currentUser.preferences.genres_likes || [])],\n        genres_dislikes: [...(this.$store.state.currentUser.preferences.genres_dislikes || [])],\n        directors_likes: [...(this.$store.state.currentUser.preferences.directors_likes || [])],\n        keywords_likes: [...(this.$store.state.currentUser.preferences.keywords_likes || [])],\n        rating_min: this.$store.state.currentUser.preferences.rating_min || 7.0,\n        streaming_services: [...(this.$store.state.currentUser.preferences.streaming_services || [])]\n      };\n\n      // Set input values\n      this.keywordsInput = this.userPrefs.keywords_likes.join(', ');\n      this.directorsInput = this.userPrefs.directors_likes.join(', ');\n      this.isEditing = true;\n    },\n    cancelEdit() {\n      this.isEditing = false;\n    },\n    toggleGenre(genre, type) {\n      if (type === 'likes') {\n        if (this.userPrefs.genres_likes.includes(genre)) {\n          this.userPrefs.genres_likes = this.userPrefs.genres_likes.filter(g => g !== genre);\n        } else {\n          this.userPrefs.genres_likes.push(genre);\n          // Remove from dislikes if necessary\n          this.userPrefs.genres_dislikes = this.userPrefs.genres_dislikes.filter(g => g !== genre);\n        }\n      } else {\n        if (this.userPrefs.genres_dislikes.includes(genre)) {\n          this.userPrefs.genres_dislikes = this.userPrefs.genres_dislikes.filter(g => g !== genre);\n        } else {\n          this.userPrefs.genres_dislikes.push(genre);\n          // Remove from likes if necessary\n          this.userPrefs.genres_likes = this.userPrefs.genres_likes.filter(g => g !== genre);\n        }\n      }\n    },\n    toggleService(service) {\n      if (this.userPrefs.streaming_services.includes(service)) {\n        this.userPrefs.streaming_services = this.userPrefs.streaming_services.filter(s => s !== service);\n      } else {\n        this.userPrefs.streaming_services.push(service);\n      }\n    },\n    async saveChanges() {\n      // Parse inputs\n      this.userPrefs.keywords_likes = this.keywordsInput.split(',').map(k => k.trim()).filter(k => k !== '');\n      this.userPrefs.directors_likes = this.directorsInput.split(',').map(d => d.trim()).filter(d => d !== '');\n      const success = await this.$store.dispatch('updateUserPreferences', this.userPrefs);\n      if (success) {\n        this.isEditing = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","isEditing","userPrefs","genres_likes","genres_dislikes","directors_likes","keywords_likes","rating_min","streaming_services","keywordsInput","directorsInput","created","fetchGenres","fetchStreamingServices","methods","$store","state","genres","length","dispatch","streamingServices","startEditing","currentUser","preferences","join","cancelEdit","toggleGenre","genre","type","includes","filter","g","push","toggleService","service","s","saveChanges","split","map","k","trim","d","success"],"sources":["/home/ubuntu/frontend/src/views/Profile.vue"],"sourcesContent":["<template>\n  <div class=\"profile\">\n    <h2 class=\"mb-4\">Mon profil</h2>\n    \n    <!-- Profile information -->\n    <div class=\"user-profile mb-4\">\n      <h3 class=\"mb-3\">{{ $store.state.currentUser.name }}</h3>\n      <hr>\n      \n      <div v-if=\"isEditing\" class=\"edit-profile\">\n        <form @submit.prevent=\"saveChanges\">\n          <!-- Genres aimés -->\n          <div class=\"form-group mb-3\">\n            <label class=\"form-label\">Genres que j'aime</label>\n            <div v-if=\"$store.state.isLoading\" class=\"text-center py-2\">\n              <div class=\"spinner-border spinner-border-sm text-primary\" role=\"status\"></div>\n            </div>\n            <div v-else class=\"d-flex flex-wrap\">\n              <div v-for=\"genre in $store.state.genres\" :key=\"genre\"\n                @click=\"toggleGenre(genre, 'likes')\"\n                class=\"tag\" :class=\"{'tag-primary': userPrefs.genres_likes.includes(genre)}\">\n                {{ genre }}\n              </div>\n            </div>\n          </div>\n          \n          <!-- Genres non aimés -->\n          <div class=\"form-group mb-3\">\n            <label class=\"form-label\">Genres que je n'aime pas</label>\n            <div v-if=\"$store.state.isLoading\" class=\"text-center py-2\">\n              <div class=\"spinner-border spinner-border-sm text-primary\" role=\"status\"></div>\n            </div>\n            <div v-else class=\"d-flex flex-wrap\">\n              <div v-for=\"genre in $store.state.genres\" :key=\"genre\"\n                @click=\"toggleGenre(genre, 'dislikes')\"\n                class=\"tag\" :class=\"{'tag-secondary': userPrefs.genres_dislikes.includes(genre)}\">\n                {{ genre }}\n              </div>\n            </div>\n          </div>\n          \n          <!-- Mots-clés -->\n          <div class=\"form-group mb-3\">\n            <label class=\"form-label\">Mots-clés d'intérêt</label>\n            <input type=\"text\" class=\"form-control\" v-model=\"keywordsInput\">\n            <small class=\"form-text text-muted\">Séparés par des virgules</small>\n          </div>\n          \n          <!-- Réalisateurs -->\n          <div class=\"form-group mb-3\">\n            <label class=\"form-label\">Réalisateurs/créateurs préférés</label>\n            <input type=\"text\" class=\"form-control\" v-model=\"directorsInput\">\n            <small class=\"form-text text-muted\">Séparés par des virgules</small>\n          </div>\n          \n          <!-- Note minimale -->\n          <div class=\"form-group mb-3\">\n            <label class=\"form-label\">Note minimale: {{ userPrefs.rating_min }}</label>\n            <input type=\"range\" class=\"form-range\" min=\"1\" max=\"10\" step=\"0.5\" v-model.number=\"userPrefs.rating_min\">\n          </div>\n          \n          <!-- Services de streaming -->\n          <div class=\"form-group mb-3\">\n            <label class=\"form-label\">Mes abonnements streaming</label>\n            <div v-if=\"$store.state.isLoading\" class=\"text-center py-2\">\n              <div class=\"spinner-border spinner-border-sm text-primary\" role=\"status\"></div>\n            </div>\n            <div v-else class=\"d-flex flex-wrap\">\n              <div v-for=\"service in $store.state.streamingServices\" :key=\"service\"\n                @click=\"toggleService(service)\"\n                class=\"tag\" :class=\"{'tag-primary': userPrefs.streaming_services.includes(service)}\">\n                {{ service.charAt(0).toUpperCase() + service.slice(1) }}\n              </div>\n            </div>\n          </div>\n          \n          <div class=\"d-flex justify-content-end mt-4\">\n            <button type=\"button\" @click=\"cancelEdit\" class=\"btn btn-outline-secondary me-2\">\n              Annuler\n            </button>\n            <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"$store.state.isLoading\">\n              <span v-if=\"$store.state.isLoading\" class=\"spinner-border spinner-border-sm me-2\" role=\"status\"></span>\n              Enregistrer\n            </button>\n          </div>\n        </form>\n      </div>\n      \n      <!-- Display profile -->\n      <div v-else class=\"user-preferences\">\n        <div class=\"row mb-3\">\n          <div class=\"col-md-4\">\n            <strong>Genres aimés:</strong>\n          </div>\n          <div class=\"col-md-8\">\n            <span v-for=\"genre in $store.state.currentUser.preferences.genres_likes\" :key=\"genre\" class=\"tag tag-primary me-1 mb-1\">\n              {{ genre }}\n            </span>\n            <span v-if=\"!$store.state.currentUser.preferences.genres_likes.length\" class=\"text-muted\">Aucun</span>\n          </div>\n        </div>\n        \n        <div class=\"row mb-3\">\n          <div class=\"col-md-4\">\n            <strong>Genres non aimés:</strong>\n          </div>\n          <div class=\"col-md-8\">\n            <span v-for=\"genre in $store.state.currentUser.preferences.genres_dislikes\" :key=\"genre\" class=\"tag tag-secondary me-1 mb-1\">\n              {{ genre }}\n            </span>\n            <span v-if=\"!$store.state.currentUser.preferences.genres_dislikes.length\" class=\"text-muted\">Aucun</span>\n          </div>\n        </div>\n        \n        <div class=\"row mb-3\">\n          <div class=\"col-md-4\">\n            <strong>Mots-clés d'intérêt:</strong>\n          </div>\n          <div class=\"col-md-8\">\n            {{ $store.state.currentUser.preferences.keywords_likes.join(', ') || 'Aucun' }}\n          </div>\n        </div>\n        \n        <div class=\"row mb-3\">\n          <div class=\"col-md-4\">\n            <strong>Réalisateurs/créateurs préférés:</strong>\n          </div>\n          <div class=\"col-md-8\">\n            {{ $store.state.currentUser.preferences.directors_likes.join(', ') || 'Aucun' }}\n          </div>\n        </div>\n        \n        <div class=\"row mb-3\">\n          <div class=\"col-md-4\">\n            <strong>Note minimale:</strong>\n          </div>\n          <div class=\"col-md-8\">\n            {{ $store.state.currentUser.preferences.rating_min }}\n          </div>\n        </div>\n        \n        <div class=\"row mb-3\">\n          <div class=\"col-md-4\">\n            <strong>Abonnements streaming:</strong>\n          </div>\n          <div class=\"col-md-8\">\n            <span v-for=\"service in $store.state.currentUser.preferences.streaming_services\" :key=\"service\" class=\"service-badge me-1\">\n              {{ service.charAt(0).toUpperCase() + service.slice(1) }}\n            </span>\n            <span v-if=\"!$store.state.currentUser.preferences.streaming_services.length\" class=\"text-muted\">Aucun</span>\n          </div>\n        </div>\n        \n        <div class=\"d-flex justify-content-end mt-4\">\n          <button @click=\"startEditing\" class=\"btn btn-outline-primary\">\n            Modifier mes préférences\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'UserProfile',\n  data() {\n    return {\n      isEditing: false,\n      userPrefs: {\n        genres_likes: [],\n        genres_dislikes: [],\n        directors_likes: [],\n        keywords_likes: [],\n        rating_min: 7.0,\n        streaming_services: []\n      },\n      keywordsInput: '',\n      directorsInput: ''\n    };\n  },\n  created() {\n    this.fetchGenres();\n    this.fetchStreamingServices();\n  },\n  methods: {\n    fetchGenres() {\n      if (!this.$store.state.genres.length) {\n        this.$store.dispatch('fetchGenres');\n      }\n    },\n    fetchStreamingServices() {\n      if (!this.$store.state.streamingServices.length) {\n        this.$store.dispatch('fetchStreamingServices');\n      }\n    },\n    startEditing() {\n      // Clone current preferences\n      this.userPrefs = {\n        genres_likes: [...this.$store.state.currentUser.preferences.genres_likes || []],\n        genres_dislikes: [...this.$store.state.currentUser.preferences.genres_dislikes || []],\n        directors_likes: [...this.$store.state.currentUser.preferences.directors_likes || []],\n        keywords_likes: [...this.$store.state.currentUser.preferences.keywords_likes || []],\n        rating_min: this.$store.state.currentUser.preferences.rating_min || 7.0,\n        streaming_services: [...this.$store.state.currentUser.preferences.streaming_services || []]\n      };\n      \n      // Set input values\n      this.keywordsInput = this.userPrefs.keywords_likes.join(', ');\n      this.directorsInput = this.userPrefs.directors_likes.join(', ');\n      \n      this.isEditing = true;\n    },\n    cancelEdit() {\n      this.isEditing = false;\n    },\n    toggleGenre(genre, type) {\n      if (type === 'likes') {\n        if (this.userPrefs.genres_likes.includes(genre)) {\n          this.userPrefs.genres_likes = this.userPrefs.genres_likes.filter(g => g !== genre);\n        } else {\n          this.userPrefs.genres_likes.push(genre);\n          // Remove from dislikes if necessary\n          this.userPrefs.genres_dislikes = this.userPrefs.genres_dislikes.filter(g => g !== genre);\n        }\n      } else {\n        if (this.userPrefs.genres_dislikes.includes(genre)) {\n          this.userPrefs.genres_dislikes = this.userPrefs.genres_dislikes.filter(g => g !== genre);\n        } else {\n          this.userPrefs.genres_dislikes.push(genre);\n          // Remove from likes if necessary\n          this.userPrefs.genres_likes = this.userPrefs.genres_likes.filter(g => g !== genre);\n        }\n      }\n    },\n    toggleService(service) {\n      if (this.userPrefs.streaming_services.includes(service)) {\n        this.userPrefs.streaming_services = this.userPrefs.streaming_services.filter(s => s !== service);\n      } else {\n        this.userPrefs.streaming_services.push(service);\n      }\n    },\n    async saveChanges() {\n      // Parse inputs\n      this.userPrefs.keywords_likes = this.keywordsInput.split(',')\n        .map(k => k.trim())\n        .filter(k => k !== '');\n        \n      this.userPrefs.directors_likes = this.directorsInput.split(',')\n        .map(d => d.trim())\n        .filter(d => d !== '');\n      \n      const success = await this.$store.dispatch('updateUserPreferences', this.userPrefs);\n      if (success) {\n        this.isEditing = false;\n      }\n    }\n  }\n}\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}