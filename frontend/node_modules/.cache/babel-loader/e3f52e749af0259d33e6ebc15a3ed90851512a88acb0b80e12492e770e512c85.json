{"ast":null,"code":"export default {\n  name: 'Login',\n  data() {\n    return {\n      showCreateAccount: false,\n      newUser: {\n        name: '',\n        genres_likes: [],\n        genres_dislikes: [],\n        directors_likes: [],\n        keywords_likes: [],\n        rating_min: 7.0,\n        streaming_services: []\n      },\n      keywordsInput: '',\n      directorsInput: ''\n    };\n  },\n  created() {\n    this.fetchUsers();\n    this.fetchGenres();\n    this.fetchStreamingServices();\n  },\n  methods: {\n    fetchUsers() {\n      this.$store.dispatch('fetchUsers');\n    },\n    fetchGenres() {\n      this.$store.dispatch('fetchGenres');\n    },\n    fetchStreamingServices() {\n      this.$store.dispatch('fetchStreamingServices');\n    },\n    async loginWithUser(userId) {\n      const success = await this.$store.dispatch('login', userId);\n      if (success) {\n        // Rediriger vers la page de recommandations\n        const redirect = this.$route.query.redirect || '/recommendations';\n        this.$router.push(redirect);\n      }\n    },\n    toggleGenre(genre, type) {\n      if (type === 'likes') {\n        if (this.newUser.genres_likes.includes(genre)) {\n          this.newUser.genres_likes = this.newUser.genres_likes.filter(g => g !== genre);\n        } else {\n          this.newUser.genres_likes.push(genre);\n          // Retirer des genres non aimés si nécessaire\n          this.newUser.genres_dislikes = this.newUser.genres_dislikes.filter(g => g !== genre);\n        }\n      } else {\n        if (this.newUser.genres_dislikes.includes(genre)) {\n          this.newUser.genres_dislikes = this.newUser.genres_dislikes.filter(g => g !== genre);\n        } else {\n          this.newUser.genres_dislikes.push(genre);\n          // Retirer des genres aimés si nécessaire\n          this.newUser.genres_likes = this.newUser.genres_likes.filter(g => g !== genre);\n        }\n      }\n    },\n    toggleService(service) {\n      if (this.newUser.streaming_services.includes(service)) {\n        this.newUser.streaming_services = this.newUser.streaming_services.filter(s => s !== service);\n      } else {\n        this.newUser.streaming_services.push(service);\n      }\n    },\n    async createNewUser() {\n      // Préparation des données\n      this.newUser.keywords_likes = this.keywordsInput.split(',').map(keyword => keyword.trim()).filter(keyword => keyword !== '');\n      this.newUser.directors_likes = this.directorsInput.split(',').map(director => director.trim()).filter(director => director !== '');\n      const success = await this.$store.dispatch('createUser', this.newUser);\n      if (success) {\n        this.$router.push('/recommendations');\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","showCreateAccount","newUser","genres_likes","genres_dislikes","directors_likes","keywords_likes","rating_min","streaming_services","keywordsInput","directorsInput","created","fetchUsers","fetchGenres","fetchStreamingServices","methods","$store","dispatch","loginWithUser","userId","success","redirect","$route","query","$router","push","toggleGenre","genre","type","includes","filter","g","toggleService","service","s","createNewUser","split","map","keyword","trim","director"],"sources":["/home/ubuntu/frontend/src/views/Login.vue"],"sourcesContent":["<template>\n  <div class=\"login\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-md-6\">\n        <div class=\"card\">\n          <div class=\"card-header\">\n            <ul class=\"nav nav-tabs card-header-tabs\">\n              <li class=\"nav-item\">\n                <a class=\"nav-link\" :class=\"{ active: !showCreateAccount }\" @click.prevent=\"showCreateAccount = false\">\n                  Connexion\n                </a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link\" :class=\"{ active: showCreateAccount }\" @click.prevent=\"showCreateAccount = true\">\n                  Créer un compte\n                </a>\n              </li>\n            </ul>\n          </div>\n          \n          <div class=\"card-body\">\n            <!-- Formulaire de connexion -->\n            <div v-if=\"!showCreateAccount\">\n              <h5 class=\"card-title mb-4\">Se connecter avec un profil existant</h5>\n              \n              <div v-if=\"$store.state.isLoading\" class=\"loading-spinner\">\n                <div class=\"spinner-border text-primary\" role=\"status\">\n                  <span class=\"visually-hidden\">Chargement...</span>\n                </div>\n              </div>\n              \n              <div v-else-if=\"$store.state.users.length === 0\" class=\"text-center py-3\">\n                <p>Aucun utilisateur disponible.</p>\n                <button @click=\"fetchUsers\" class=\"btn btn-outline-primary\">\n                  Rafraîchir la liste\n                </button>\n              </div>\n              \n              <div v-else>\n                <div class=\"list-group mb-4\">\n                  <button v-for=\"user in $store.state.users\" :key=\"user.id\"\n                    @click=\"loginWithUser(user.id)\"\n                    class=\"list-group-item list-group-item-action\">\n                    {{ user.name }}\n                  </button>\n                </div>\n              </div>\n            </div>\n            \n            <!-- Formulaire de création de compte -->\n            <div v-else>\n              <h5 class=\"card-title mb-4\">Créer un nouveau profil</h5>\n              \n              <form @submit.prevent=\"createNewUser\">\n                <div class=\"form-group mb-3\">\n                  <label for=\"name\">Nom</label>\n                  <input type=\"text\" class=\"form-control\" id=\"name\" v-model=\"newUser.name\" required>\n                </div>\n                \n                <!-- Sélection des genres aimés -->\n                <div class=\"form-group mb-3\">\n                  <label>Genres que vous aimez</label>\n                  <div v-if=\"$store.state.isLoading\" class=\"text-center py-2\">\n                    <div class=\"spinner-border spinner-border-sm text-primary\" role=\"status\"></div>\n                  </div>\n                  <div v-else class=\"d-flex flex-wrap\">\n                    <div v-for=\"genre in $store.state.genres\" :key=\"genre\" \n                      @click=\"toggleGenre(genre, 'likes')\"\n                      class=\"tag\" :class=\"{'tag-primary': newUser.genres_likes.includes(genre)}\">\n                      {{ genre }}\n                    </div>\n                  </div>\n                </div>\n                \n                <!-- Sélection des genres non aimés -->\n                <div class=\"form-group mb-3\">\n                  <label>Genres que vous n'aimez pas</label>\n                  <div v-if=\"$store.state.isLoading\" class=\"text-center py-2\">\n                    <div class=\"spinner-border spinner-border-sm text-primary\" role=\"status\"></div>\n                  </div>\n                  <div v-else class=\"d-flex flex-wrap\">\n                    <div v-for=\"genre in $store.state.genres\" :key=\"genre\"\n                      @click=\"toggleGenre(genre, 'dislikes')\"\n                      class=\"tag\" :class=\"{'tag-secondary': newUser.genres_dislikes.includes(genre)}\">\n                      {{ genre }}\n                    </div>\n                  </div>\n                </div>\n                \n                <!-- Mots-clés d'intérêt -->\n                <div class=\"form-group mb-3\">\n                  <label for=\"keywords\">Mots-clés d'intérêt (séparés par des virgules)</label>\n                  <input type=\"text\" class=\"form-control\" id=\"keywords\" v-model=\"keywordsInput\">\n                </div>\n                \n                <!-- Réalisateurs/créateurs préférés -->\n                <div class=\"form-group mb-3\">\n                  <label for=\"directors\">Réalisateurs/créateurs que vous appréciez (séparés par des virgules)</label>\n                  <input type=\"text\" class=\"form-control\" id=\"directors\" v-model=\"directorsInput\">\n                </div>\n                \n                <!-- Note minimale -->\n                <div class=\"form-group mb-3\">\n                  <label for=\"rating\">Note minimale (1-10)</label>\n                  <input type=\"range\" class=\"form-range\" min=\"1\" max=\"10\" step=\"0.5\" id=\"rating\" v-model.number=\"newUser.rating_min\">\n                  <div class=\"text-center\">{{ newUser.rating_min }}</div>\n                </div>\n                \n                <!-- Services de streaming -->\n                <div class=\"form-group mb-3\">\n                  <label>Services de streaming auxquels vous êtes abonné(e)</label>\n                  <div v-if=\"$store.state.isLoading\" class=\"text-center py-2\">\n                    <div class=\"spinner-border spinner-border-sm text-primary\" role=\"status\"></div>\n                  </div>\n                  <div v-else class=\"d-flex flex-wrap\">\n                    <div v-for=\"service in $store.state.streamingServices\" :key=\"service\"\n                      @click=\"toggleService(service)\"\n                      class=\"tag\" :class=\"{'tag-primary': newUser.streaming_services.includes(service)}\">\n                      {{ service.charAt(0).toUpperCase() + service.slice(1) }}\n                    </div>\n                  </div>\n                </div>\n                \n                <div class=\"d-grid gap-2\">\n                  <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"$store.state.isLoading\">\n                    <span v-if=\"$store.state.isLoading\" class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n                    Créer mon profil\n                  </button>\n                </div>\n              </form>\n            </div>\n            \n            <div v-if=\"$store.state.error\" class=\"alert alert-danger mt-3\">\n              {{ $store.state.error }}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Login',\n  data() {\n    return {\n      showCreateAccount: false,\n      newUser: {\n        name: '',\n        genres_likes: [],\n        genres_dislikes: [],\n        directors_likes: [],\n        keywords_likes: [],\n        rating_min: 7.0,\n        streaming_services: []\n      },\n      keywordsInput: '',\n      directorsInput: ''\n    };\n  },\n  created() {\n    this.fetchUsers();\n    this.fetchGenres();\n    this.fetchStreamingServices();\n  },\n  methods: {\n    fetchUsers() {\n      this.$store.dispatch('fetchUsers');\n    },\n    fetchGenres() {\n      this.$store.dispatch('fetchGenres');\n    },\n    fetchStreamingServices() {\n      this.$store.dispatch('fetchStreamingServices');\n    },\n    async loginWithUser(userId) {\n      const success = await this.$store.dispatch('login', userId);\n      if (success) {\n        // Rediriger vers la page de recommandations\n        const redirect = this.$route.query.redirect || '/recommendations';\n        this.$router.push(redirect);\n      }\n    },\n    toggleGenre(genre, type) {\n      if (type === 'likes') {\n        if (this.newUser.genres_likes.includes(genre)) {\n          this.newUser.genres_likes = this.newUser.genres_likes.filter(g => g !== genre);\n        } else {\n          this.newUser.genres_likes.push(genre);\n          // Retirer des genres non aimés si nécessaire\n          this.newUser.genres_dislikes = this.newUser.genres_dislikes.filter(g => g !== genre);\n        }\n      } else {\n        if (this.newUser.genres_dislikes.includes(genre)) {\n          this.newUser.genres_dislikes = this.newUser.genres_dislikes.filter(g => g !== genre);\n        } else {\n          this.newUser.genres_dislikes.push(genre);\n          // Retirer des genres aimés si nécessaire\n          this.newUser.genres_likes = this.newUser.genres_likes.filter(g => g !== genre);\n        }\n      }\n    },\n    toggleService(service) {\n      if (this.newUser.streaming_services.includes(service)) {\n        this.newUser.streaming_services = this.newUser.streaming_services.filter(s => s !== service);\n      } else {\n        this.newUser.streaming_services.push(service);\n      }\n    },\n    async createNewUser() {\n      // Préparation des données\n      this.newUser.keywords_likes = this.keywordsInput.split(',')\n        .map(keyword => keyword.trim())\n        .filter(keyword => keyword !== '');\n        \n      this.newUser.directors_likes = this.directorsInput.split(',')\n        .map(director => director.trim())\n        .filter(director => director !== '');\n      \n      const success = await this.$store.dispatch('createUser', this.newUser);\n      if (success) {\n        this.$router.push('/recommendations');\n      }\n    }\n  }\n}\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}