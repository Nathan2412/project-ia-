{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, TransitionGroup as _TransitionGroup, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"notification-wrapper\"\n};\nconst _hoisted_2 = {\n  class: \"notification-content\"\n};\nconst _hoisted_3 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_TransitionGroup, {\n    name: \"notification\"\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.notifications, notification => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: notification.id,\n        class: _normalizeClass([\"notification\", [notification.type]])\n      }, [_createElementVNode(\"div\", _hoisted_2, _toDisplayString(notification.message), 1 /* TEXT */), _createElementVNode(\"button\", {\n        class: \"notification-close\",\n        onClick: $event => $options.removeNotification(notification.id)\n      }, \" Ã— \", 8 /* PROPS */, _hoisted_3)], 2 /* CLASS */);\n    }), 128 /* KEYED_FRAGMENT */))]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_TransitionGroup","name","_Fragment","_renderList","$data","notifications","notification","key","id","_normalizeClass","type","_createElementVNode","_hoisted_2","_toDisplayString","message","onClick","$event","$options","removeNotification","_hoisted_3"],"sources":["/home/ubuntu/frontend/src/components/NotificationSystem.vue"],"sourcesContent":["<template>\n  <div class=\"notification-wrapper\">\n    <transition-group name=\"notification\">\n      <div v-for=\"notification in notifications\" \n          :key=\"notification.id\" \n          class=\"notification\" \n          :class=\"[notification.type]\">\n        <div class=\"notification-content\">\n          {{ notification.message }}\n        </div>\n        <button class=\"notification-close\" @click=\"removeNotification(notification.id)\">\n          &times;\n        </button>\n      </div>\n    </transition-group>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'NotificationSystem',\n  data() {\n    return {\n      notifications: [],\n      nextId: 1\n    };\n  },\n  methods: {\n    addNotification(message, type = 'info', timeout = 5000) {\n      const id = this.nextId++;\n      const notification = { id, message, type };\n      this.notifications.push(notification);\n      \n      // Auto-remove after timeout\n      if (timeout !== 0) {\n        setTimeout(() => {\n          this.removeNotification(id);\n        }, timeout);\n      }\n      \n      return id;\n    },\n    removeNotification(id) {\n      const index = this.notifications.findIndex(n => n.id === id);\n      if (index !== -1) {\n        this.notifications.splice(index, 1);\n      }\n    },\n    success(message, timeout = 5000) {\n      return this.addNotification(message, 'success', timeout);\n    },\n    error(message, timeout = 5000) {\n      return this.addNotification(message, 'error', timeout);\n    },\n    info(message, timeout = 5000) {\n      return this.addNotification(message, 'info', timeout);\n    },\n    warning(message, timeout = 5000) {\n      return this.addNotification(message, 'warning', timeout);\n    }\n  }\n};\n</script>\n\n<style scoped>\n.notification-wrapper {\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  z-index: 9999;\n  width: 300px;\n}\n\n.notification {\n  padding: 12px 15px;\n  margin-bottom: 10px;\n  border-radius: 4px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  color: white;\n  background-color: #333;\n}\n\n.notification.success {\n  background-color: #28a745;\n}\n\n.notification.error {\n  background-color: #dc3545;\n}\n\n.notification.info {\n  background-color: #17a2b8;\n}\n\n.notification.warning {\n  background-color: #ffc107;\n  color: #333;\n}\n\n.notification-content {\n  flex-grow: 1;\n  padding-right: 10px;\n}\n\n.notification-close {\n  background: transparent;\n  border: none;\n  color: inherit;\n  cursor: pointer;\n  font-size: 18px;\n  padding: 0;\n  opacity: 0.7;\n  transition: opacity 0.2s;\n}\n\n.notification-close:hover {\n  opacity: 1;\n}\n\n/* Transition animations */\n.notification-enter-active,\n.notification-leave-active {\n  transition: all 0.3s ease;\n}\n\n.notification-enter-from {\n  opacity: 0;\n  transform: translateX(50px);\n}\n\n.notification-leave-to {\n  opacity: 0;\n  transform: translateY(-30px);\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAsB;;EAMtBA,KAAK,EAAC;AAAsB;;;uBANvCC,mBAAA,CAcM,OAdNC,UAcM,GAbJC,YAAA,CAYmBC,gBAAA;IAZDC,IAAI,EAAC;EAAc;sBAC9B,MAAqC,E,kBAA1CJ,mBAAA,CAUMK,SAAA,QAAAC,WAAA,CAVsBC,KAAA,CAAAC,aAAa,EAA7BC,YAAY;2BAAxBT,mBAAA,CAUM;QATDU,GAAG,EAAED,YAAY,CAACE,EAAE;QACrBZ,KAAK,EAAAa,eAAA,EAAC,cAAc,GACXH,YAAY,CAACI,IAAI;UAC5BC,mBAAA,CAEM,OAFNC,UAEM,EAAAC,gBAAA,CADDP,YAAY,CAACQ,OAAO,kBAEzBH,mBAAA,CAES;QAFDf,KAAK,EAAC,oBAAoB;QAAEmB,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,kBAAkB,CAACZ,YAAY,CAACE,EAAE;SAAG,KAEhF,iBAAAW,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}